@using FMS.Core;
@model FMS.Website.Models.NumberVehicleMakeModel

@{
	ViewBag.Title = Model.TitleForm;
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker.min.css" rel="stylesheet">
<style>
	.datepicker {
		margin-left: 15px;
	}
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>
<script type="text/javascript">
		$(document).ready(function () {
			$('#SearchView_YearFrom').datepicker({
			  minViewMode: 2,
			  format: 'yyyy',
			  autoclose: true,
			  position: 'right bottom',
			  container: '#xz'
			});
			$('#SearchView_YearTo').datepicker({
				minViewMode: 2,
				format: 'yyyy',
				autoclose: true,
				position: 'right bottom',
				container: '#xy'
			});
		});
</script>

<div class="opt-content clearfloat">
	<h5 class="title-page">@ViewBag.Title</h5>
    @if (Model.CurrentPageAccess.ReadAccess == true) { 
	<a href="#!" class="btn btn-primary line" id="btnExport" title="Export To Excel" onclick="ExportXls()">
		<i class="fa fa-download"></i> Export
	</a>
    }
</div>
<section class="content">
	<div class="wpanel">
		<div class="row">
			@using (Ajax.BeginForm("FilterNoVehicleMake", "RptExecutiveSummary",
				new AjaxOptions
				{
					HttpMethod = "POST",
					InsertionMode = InsertionMode.Replace,
					UpdateTargetId = "contenttable",
					OnComplete = "setupDataTables",
					OnBegin = "LoadingShow",
					OnSuccess = "LoadingHide",
					OnFailure = "LoadingHide",
				}))
			{
				<div class="col-md-3">
					<div class="form-group">
						<label for="">Month From</label>
						@Html.DropDownListFor(model => model.SearchView.MonthFrom, Model.SearchView.MonthList, new { @class = "form-control month" })
					</div>
				</div>
				<div class="col-md-3">
					<div class="form-group" id="xz">
						<label for="">Year From</label>
						@*<input type="text" id="SearchView_YearFrom" value="@Model.SearchView.YearFrom" class="form-control year" data-provide="datepicker" />*@
                        @Html.TextBoxFor(model => model.SearchView.YearFrom, new { @class = "form-control year", @data_provide = "datepicker" })
					</div>
				</div>
				<div class="col-md-3">
					<div class="form-group">
						<label for="">Month To</label>
						@Html.DropDownListFor(model => model.SearchView.MonthTo, Model.SearchView.MonthList, new { @class = "form-control month" })
					</div>
				</div>
				<div class="col-md-3">
					<div class="form-group" id="xy">
						<label for="">Year To</label>
						@*<input type="text" id="SearchView_YearTo" value="@Model.SearchView.YearTo" class="form-control year" data-provide="datepicker" />*@
                        @Html.TextBoxFor(model => model.SearchView.YearTo, new { @class = "form-control year", @data_provide = "datepicker" })
					</div>
				</div>
				<div class="clearfix"></div>
				<div class="col-md-3">
					<div class="form-group">
						<label for="">Manufacturer</label>
						@Html.TextBoxFor(model => model.SearchView.Manufacturer, new { @class = "form-control text" })
					</div>
				</div>
				<div class="col-md-3">
					<div class="form-group">
						<label for="">Body Type</label>
						@Html.TextBoxFor(model => model.SearchView.BodyType, new { @class = "form-control text" })
					</div>
				</div>
				<div class="clearfix"></div>
				<div class="col-md-12">
					<button id="btn-filter" type="submit" class="btn btn-primary">Filter</button>
					<button id="btn-reset" type="button" class="btn btn-default">Reset</button>
				</div>
			}
		</div>
	</div>
    <div class="wpanel">
        <ul class="nav nav-pills">
            <li class="active"><a href="#visual1" data-toggle="tab">Visual</a></li>
            <li><a href="#contenttable" data-toggle="tab">Data</a></li>
        </ul>
        <br />
        <div class="tab-content">
            <div id="contenttable" class="tab-pane">
                @Html.Partial("_ListVehicleMake")
            </div>
            <div id="visual1" class="tab-pane fade in active">
                <div class="content chart-summary">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-body" id="chartDiv">
                                    <canvas id="mylineChart"></canvas>
                                </div>
                                <div class="card-footer"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<div id="LoadingModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-body">
				<div align="center">
					<img src="~/Content/img/loader2.gif" id="imgLoader" style="display:block" />
				</div>
			</div>
		</div>
	</div>
</div>
<script src="~/Scripts/js/Chart.bundle.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/execsumscript.js"></script>
<script type="text/javascript">
    function LoadingShow() {
        $('#LoadingModal').show();
    }
    function LoadingHide() {
        $('#LoadingModal').hide();
    }
    function ExportXls() {
        console.log('Submitting');
        var url = '@Url.Action(Model.TitleExport , "RptExecutiveSummary")';
        var getFileUrl = '@Url.Action("GetExcelFile", "RptExecutiveSummary")';
        console.log(url);
        var objToUpload =
			{
			    SearchViewExport: {
			        MonthFrom: $('#SearchView_MonthFrom').val(),
			        MonthTo: $('#SearchView_MonthTo').val(),
			        YearFrom: $('#SearchView_YearFrom').val(),
			        YearTo: $('#SearchView_YearTo').val(),
			        Manufacturer: $('#SearchView_Manufacturer').val(),
			        BodyType: $('#SearchView_BodyType').val(),
			    }

			};
        $.ajax({
            url: url,
            data: JSON.stringify(objToUpload),
            contentType: 'application/json; charset=utf-8',
            beforeSend: function () {
                $('#LoadingModal').show();
            },
            success: function (response, status, jqxhr) {
                console.log("DONE");
                window.location = getFileUrl + "?pathFile=" + response;
                $('#LoadingModal').hide();
            },
            error: function (jqhxr) {
                console.log("ERROR");
                console.log(jqhxr.responseText);
                $('#LoadingModal').hide();
            },
            type: 'POST'
        });

    }

    function setupDataTables() {
        // DataTable
        var table = $('#tbVehicleMake').DataTable({
            "dom": 'lf<"table-overflow"t>pi'
        });

        // Apply the search
        table.columns().eq(0).each(function (colIdx) {
            $('input', $('.filters th')[colIdx]).on('keyup change', function () {
                table
                    .column(colIdx)
                    .search(this.value)
                    .draw();
            });
        });
    }

    $(document).on('click', '#btn-reset', function () {
        var d = new Date();

        $('.month').val(d.getMonth() + 1);
        $(".year").val(d.getFullYear());
        $(".text").val('');

        $("#btn-filter").trigger('click');
    });

    $(function () {
        setupDataTables();
    });

    $(document).ready(function () {
        init_charts();
    });

    function init_charts() {
        $('#LoadingModal').show();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("VisualNoVehicleMake", "RptExecutiveSummary")',
            data: { monthFrom: $('#SearchView_MonthFrom').val(), yearFrom: $('#SearchView_YearFrom').val(), monthTo: $('#SearchView_MonthTo').val(), yearTo: $('#SearchView_YearTo').val(), isByRegion: false },
            success: function (response) {
                var labels_chart = [];
                var first_chart = [];
                var second_chart = [];
                for (var i = 0; i < response.length; i++) {
                    labels_chart.push(response[i].MANUFACTURER);
                    first_chart.push(response[i].NO_OF_VEHICLE_FIRST);
                    second_chart.push(response[i].NO_OF_VEHICLE_ELSE);
                }

                if ($('#mylineChart').length) {
                    $('#mylineChart').remove();
                    $('#chartDiv').append('<canvas id="mylineChart"><canvas>');
                    var ctx = document.getElementById("mylineChart");
                    var mylineChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels_chart,
                            datasets: [{
                                label: '# of SUV',
                                backgroundColor: "rgba(130, 130, 130, 0.31)",
                                borderColor: "rgba(130, 130, 130, 0.7)",
                                pointBorderColor: "rgba(130, 130, 130, 0.7)",
                                pointBackgroundColor: "rgba(130, 130, 130, 0.7)",
                                pointHoverBackgroundColor: "#fff",
                                pointHoverBorderColor: "rgba(130,130,130,1)",
                                pointBorderWidth: 1,
                                data: first_chart
                            }, {
                                label: '# of ELSE',
                                backgroundColor: "rgba(33, 164, 255, 0.3)",
                                borderColor: "rgba(33, 164, 255, 0.70)",
                                pointBorderColor: "rgba(33, 164, 255, 0.70)",
                                pointBackgroundColor: "rgba(33, 164, 255, 0.70)",
                                pointHoverBackgroundColor: "#fff",
                                pointHoverBorderColor: "rgba(33, 164, 255,1)",
                                pointBorderWidth: 1,
                                data: second_chart
                            }]
                        },
                        options: {
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }]
                            }
                        }
                    });
                }
            },
            error: function (jqhxr) {
                console.log("ERROR");
                console.log(jqhxr.responseText);
                $('#LoadingModal').hide();
            }
        });

        $('#LoadingModal').hide();
    }

    $(document).on('click', '#btn-filter', function () {
        init_charts();
    });
</script>