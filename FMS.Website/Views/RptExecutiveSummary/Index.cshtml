@using FMS.Core;
@model FMS.Website.Models.ExecutiveSummaryModel

@{
	ViewBag.Title = Model.TitleForm;
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker.min.css" rel="stylesheet">
<style>
	.datepicker {
		margin-left: 15px;
	}
    .default {
        display: block !important;
        width: 100% !important;
        height: 30px !important;
        padding: 6px 12px !important;
        font-size: 14px !important;
        line-height: 1.42857143 !important;
        background-color: #fff !important;
        background-image: none !important;
        border: 1px solid #ccc !important;
        border-radius: 4px !important;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075) !important;
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075) !important;
        -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s !important;
        -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s !important;
        transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s !important;
    }
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>
<script type="text/javascript">
		$(document).ready(function () {
			$('#SearchView_YearFrom').datepicker({
			  minViewMode: 2,
			  format: 'yyyy',
			  autoclose: true,
			  position: 'right bottom',
			  container: '#xz'
			});
			$('#SearchView_YearTo').datepicker({
				minViewMode: 2,
				format: 'yyyy',
				autoclose: true,
				position: 'right bottom',
				container: '#xy'
			});
		});
</script>

<div class="opt-content clearfloat">
	<h5 class="title-page">@ViewBag.Title</h5>
    @if (Model.CurrentPageAccess.ReadAccess == true) { 
	<a href="#!" class="btn btn-primary line" id="btnExport" title="Export To Excel" onclick="ExportXls()">
		<i class="fa fa-download"></i> Export
	</a>
    }
</div>
<section class="content">
	<div class="wpanel">
		<div class="row">
			@using (Ajax.BeginForm("FilterNoVehicle", "RptExecutiveSummary",
						 new AjaxOptions
						 {
							 HttpMethod = "POST",
							 InsertionMode = InsertionMode.Replace,
							 UpdateTargetId = "contenttable",
							 OnComplete = "setupDataTables",
							 OnBegin = "LoadingShow",
							 OnSuccess = "LoadingHide",
							 OnFailure = "LoadingHide",
						 }))
			{
				@Html.HiddenFor(model => model.TitleExport)
				<div class="col-md-3">
					<div class="form-group">
						<label for="">Month From</label>
						@Html.DropDownListFor(model => model.SearchView.MonthFrom, Model.SearchView.MonthList, new { @class = "form-control month" })
					</div>
				</div>
				<div class="col-md-3">
					<div class="form-group" id="xz">
						<label for="">Year From</label>
						@*<input type="text" id="SearchView_YearFrom" value="@Model.SearchView.YearFrom" data-provide="datepicker" />*@
                        @Html.TextBoxFor(model => model.SearchView.YearFrom, new { @class = "form-control year", @data_provide = "datepicker" })
					</div>
				</div>
				<div class="col-md-3">
					<div class="form-group">
						<label for="">Month To</label>
						@Html.DropDownListFor(model => model.SearchView.MonthTo, Model.SearchView.MonthList, new { @class = "form-control month" })
					</div>
				</div>
				<div class="col-md-3">
					<div class="form-group" id="xy">
						<label for="">Year To</label>
						@*<input type="text" id="SearchView_YearTo" value="@Model.SearchView.YearTo" class="form-control year" data-provide="datepicker" />*@
                        @Html.TextBoxFor(model => model.SearchView.YearTo, new { @class = "form-control year", @data_provide = "datepicker" })
					</div>
				</div>
				<div class="clearfix"></div>
				<div class="col-md-3">
					<div class="form-group">
						<label for="">Vehicle Type</label>
                        @if (Model.CurrentLogin.UserRole == Enums.UserRole.Viewer || Model.CurrentLogin.UserRole == Enums.UserRole.EHS
                                                || Model.CurrentLogin.UserRole == Enums.UserRole.Fleet || Model.CurrentLogin.UserRole == Enums.UserRole.Administrator
                                                || Model.CurrentLogin.UserRole == Enums.UserRole.IsSupport || Model.CurrentLogin.UserRole == Enums.UserRole.FleetManager)
                        { 
						    @Html.DropDownListFor(model => model.SearchView.VehicleType, Model.SearchView.VehicleTypeList, "", new { @class = "form-control select" })
                        }
                        else if (Model.CurrentLogin.UserRole == Enums.UserRole.FinanceZone || Model.CurrentLogin.UserRole == Enums.UserRole.ComFinanceManager
                        || Model.CurrentLogin.UserRole == Enums.UserRole.Logistic|| Model.CurrentLogin.UserRole == Enums.UserRole.OpsFinanceManager
                        || Model.CurrentLogin.UserRole == Enums.UserRole.LDManager)
                        {
                            @Html.TextBoxFor(model => model.SearchView.VehicleType, new { @class = "form-control", @readonly = "readonly", @Value = "WTC" })
                        }
                        else if (Model.CurrentLogin.UserRole == Enums.UserRole.HR || Model.CurrentLogin.UserRole == Enums.UserRole.HRManager)
                        {
                            @Html.TextBoxFor(model => model.SearchView.VehicleType, new { @class = "form-control", @readonly = "readonly", @Value = "BENEFIT" })
                        }
					</div>
				</div>
				<div class="col-md-3">
					<div class="form-group">
						<label for="">Regional</label>
						@Html.DropDownListFor(model => model.SearchView.Regional, Model.SearchView.RegionalList, "", new { @class = "form-control select" })
					</div>
				</div>
				<div class="col-md-3">
					<div class="form-group">
						<label for="">Supply Method</label>
						@Html.DropDownListFor(model => model.SearchView.SupplyMethod, Model.SearchView.SupplyMethodList, "", new { @class = "form-control select" })
					</div>
				</div>
				<div class="col-md-3">
					<div class="form-group">
						<label for="">Function</label>
						@if (Model.CurrentLogin.UserRole == Enums.UserRole.Viewer || Model.CurrentLogin.UserRole == Enums.UserRole.EHS
                                        || Model.CurrentLogin.UserRole == Enums.UserRole.Fleet || Model.CurrentLogin.UserRole == Enums.UserRole.HR
                                        || Model.CurrentLogin.UserRole == Enums.UserRole.Administrator || Model.CurrentLogin.UserRole == Enums.UserRole.IsSupport
                                        || Model.CurrentLogin.UserRole == Enums.UserRole.FleetManager || Model.CurrentLogin.UserRole == Enums.UserRole.HRManager)
                        { 
                            @Html.HiddenFor(model => model.SearchView.FunctionId)
						    @Html.DropDownListFor(model => model.SearchView.Function, Model.SearchView.Functions, new { @id = "select-function-id", @class = "chosen form-control", multiple = "multiple" })
                        }
                        else if (Model.CurrentLogin.UserRole == Enums.UserRole.FinanceZone || Model.CurrentLogin.UserRole == Enums.UserRole.ComFinanceManager)
                        {
                            @Html.TextBoxFor(model => model.SearchView.FunctionId, new { @class = "form-control", @readonly = "readonly", @Value = "Sales,Marketing" })
                        }
                        else if (Model.CurrentLogin.UserRole == Enums.UserRole.OpsFinanceManager)
                        {
                            @Html.TextBoxFor(model => model.SearchView.FunctionId, new { @class = "form-control", @readonly = "readonly", @Value = "Operations" })
                        }
                        else if (Model.CurrentLogin.UserRole == Enums.UserRole.Logistic || Model.CurrentLogin.UserRole == Enums.UserRole.LDManager)
                        {
                            @Html.TextBoxFor(model => model.SearchView.FunctionId, new { @class = "form-control", @readonly = "readonly", @Value = "Logistic" })
                        }
                    </div>
				</div>
                if (Model.CurrentLogin.UserRole == Enums.UserRole.FinanceZone || Model.CurrentLogin.UserRole == Enums.UserRole.Logistic)
                {
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="SearchView_Zone">Zone</label>
                            @Html.HiddenFor(model => model.SearchView.ZoneId)
                            @Html.DropDownListFor(model => model.SearchView.Zone, Model.SearchView.ZoneList, new { @class = "form-control chosen", @data_live_search = true, @multiple = "multiple" })
                        </div>
                    </div>
                }
                else
                {
                    @Html.HiddenFor(model => model.SearchView.Zone)
                }
				<div class="clearfix"></div>
				<div class="col-md-12">
					<button id="btn-filter" type="submit" class="btn btn-primary">Filter</button>
					<button id="btn-reset" type="button" class="btn btn-default">Reset</button>
				</div>
			}
		</div>
	</div>
    <div class = "wpanel">
        <ul class="nav nav-pills">
            <li class="active"><a href="#visual1" data-toggle="tab">Visual</a></li>
            <li><a href="#contenttable" data-toggle="tab">Data</a></li>
        </ul>
        <br />
        <div class="tab-content">
            <div id="contenttable" class="tab-pane">
                @Html.Partial("_ListVehicle")
            </div>
            <div id="visual1" class="tab-pane fade in active">
                <div class="content chart-summary">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-body" id="chartDiv">
                                    <canvas id="mylineChart"></canvas>
                                </div>
                                <div class="card-footer"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<div id="LoadingModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-body">
				<div align="center">
					<img src="~/Content/img/loader2.gif" id="imgLoader" style="display:block" />
				</div>
			</div>
		</div>
	</div>
</div>
<script src="~/Scripts/js/Chart.bundle.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/execsumscript.js"></script>
<script type="text/javascript">
    function LoadingShow() {
        $('#LoadingModal').show();

        var theList = "";

        $("li.search-choice span").each(function (e) {
            theList += $(this).text() + ",";
        });
        
        if ($("#SearchView_ZoneId").length > 0) {
            $("#SearchView_ZoneId").val(theList.slice(0, -1));
        } else {
            $("#SearchView_FunctionId").val(theList.slice(0, -1));
        }
    }

    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }

    function LoadingHide() {
        $('#LoadingModal').hide();
    }
    function ExportXls() {
        console.log('Submitting');

        var theList = "";

        $("li.search-choice span").each(function (e) {
            theList += $(this).text() + ",";
        });

        theList = theList.slice(0, -1);

        var zoneId = "";
        if ($("#SearchView_ZoneId").length > 0) {
            zoneId = theList;
            theList = $("#SearchView_FunctionId").val();
        }

        var url = '@Url.Action(Model.TitleExport , "RptExecutiveSummary")';
        var getFileUrl = '@Url.Action("GetExcelFile", "RptExecutiveSummary")';
        console.log(url);
        var objToUpload =
			{
			    SearchViewExport: {
			        MonthFrom: $('#SearchView_MonthFrom').val(),
			        MonthTo: $('#SearchView_MonthTo').val(),
			        YearFrom: $('#SearchView_YearFrom').val(),
			        YearTo: $('#SearchView_YearTo').val(),
			        VehicleType: $('#SearchView_VehicleType').val(),
			        SupplyMethod:$('#SearchView_SupplyMethod').val(),
			        Regional:$('#SearchView_Regional').val(),
			        Function: theList,
			        ZoneId: zoneId,
			    }

			};
        $.ajax({
            url: url,
            data: JSON.stringify(objToUpload),
            contentType: 'application/json; charset=utf-8',
            beforeSend: function () {
                $('#LoadingModal').show();
            },
            success: function (response, status, jqxhr) {
                console.log("DONE");
                window.location = getFileUrl + "?pathFile=" + response;
                $('#LoadingModal').hide();
            },
            error: function (jqhxr) {
                console.log("ERROR");
                console.log(jqhxr.responseText);
                $('#LoadingModal').hide();
            },
            type: 'POST'
        });

    }
    function setupDataTables() {
        // DataTable
        var table = $('#tbVehicle').DataTable({
            "dom": 'lf<"table-overflow"t>pi'
        });

        // Apply the search
        table.columns().eq(0).each(function (colIdx) {
            $('input', $('.filters th')[colIdx]).on('keyup change', function () {
                table
                    .column(colIdx)
                    .search(this.value)
                    .draw();
            });
        });
    }

    $(document).on('click', '#btn-reset', function () {
        var d = new Date();

        $('.month').val(d.getMonth() + 1);
        $(".year").val(d.getFullYear());
        $(".select").val('');
        $(".text").val('');

        $("#btn-filter").trigger('click');
    });

    $(function () {
        setupDataTables();
    });

    $(document).ready(function () {
        init_charts();

        $('aside').animate({
            scrollTop: $("#NumbVehicle").offset().top
        }, 1000);
    });

    function init_charts() {
        $('#LoadingModal').show();

        var theList = "";

        $("li.search-choice span").each(function (e) {
            theList += $(this).text() + ",";
        });

        theList = theList.slice(0, -1);

        var zoneId = "";
        if ($("#SearchView_ZoneId").length > 0) {
            zoneId = theList;
            theList = $("#SearchView_FunctionId").val();
        }

        @*$.ajax({
            type: 'POST',
            url: '@Url.Action("VisualNoVehicle", "RptExecutiveSummary")',
            data: { monthFrom: $('#SearchView_MonthFrom').val(), yearFrom: $('#SearchView_YearFrom').val(), monthTo: $('#SearchView_MonthTo').val(), yearTo: $('#SearchView_YearTo').val(), isByRegion: false, vehType: $('#SearchView_VehicleType').val(), regional: $('#SearchView_Regional').val(), suppMethod: $('#SearchView_SupplyMethod').val(), functions: theList, zone: zoneId },
            success: function (response) {
                var labels_chart = [];
                var first_chart = [];
                var second_chart = [];
                var label_1 = "BENEFIT";
                var label_2 = "WTC";
                for (var i = 0; i < response.length; i++) {
                    labels_chart.push(response[i].FUNCTION);
                    first_chart.push(response[i].NO_OF_VEHICLE_BENEFIT);
                    second_chart.push(response[i].NO_OF_VEHICLE_WTC);
                    label_1 = response[i].LABEL1;
                    label_2 = response[i].LABEL2;
                }
                
                if ($('#mylineChart').length) {
                    $('#mylineChart').remove();
                    $('#chartDiv').append('<canvas id="mylineChart"><canvas>');
                    var ctx = document.getElementById("mylineChart");
                    var mylineChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels_chart,
                            datasets: [{
                                label: label_1,
                                backgroundColor: "rgba(130, 130, 130, 0.31)",
                                data: first_chart
                            }, {
                                label: label_2,
                                backgroundColor: "rgba(33, 164, 255, 0.70)",
                                data: second_chart
                            }]
                        },
                        //HERE COMES THE AXIS LABEL
                        options: {
                            scales: {
                                yAxes: [{
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Unit'
                                    }
                                }],
                                xAxes: [{
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Functions'
                                    }
                                }]
                            }
                        }
                    });
                }
            },
            error: function (jqhxr) {
                console.log("ERROR");
                console.log(jqhxr.responseText);
                $('#LoadingModal').hide();
            }
        });*@

        $.ajax({
            type: 'POST',
            url: '@Url.Action("VisualNoVehicle", "RptExecutiveSummary")',
            data: { monthFrom: $('#SearchView_MonthFrom').val(), yearFrom: $('#SearchView_YearFrom').val(), monthTo: $('#SearchView_MonthTo').val(), yearTo: $('#SearchView_YearTo').val(), isByRegion: false, vehType: $('#SearchView_VehicleType').val(), regional: $('#SearchView_Regional').val(), suppMethod: $('#SearchView_SupplyMethod').val(), functions: theList, zone: zoneId },
            success: function (response) {
                var labels_chart = [];
                var data_chart = [];

                var chart_1 = []; var chart_2 = []; var chart_3 = []; var chart_4 = []; var chart_5 = []; var chart_6 = [];
                var chart_7 = []; var chart_8 = []; var chart_9 = []; var chart_10 = []; var chart_11 = []; var chart_12 = [];
                var chart_13 = []; var chart_14 = []; var chart_15 = []; var chart_16 = []; var chart_17 = []; var chart_18 = [];
                var chart_19 = []; var chart_20 = []; var chart_21 = []; var chart_22 = []; var chart_23 = []; var chart_24 = [];

                var label_1 = "BENEFIT Jan " + $('#SearchView_YearFrom').val();
                var label_2 = "BENEFIT Feb " + $('#SearchView_YearFrom').val();
                var label_3 = "BENEFIT Mar " + $('#SearchView_YearFrom').val();
                var label_4 = "BENEFIT Apr " + $('#SearchView_YearFrom').val();
                var label_5 = "BENEFIT May " + $('#SearchView_YearFrom').val();
                var label_6 = "BENEFIT Jun " + $('#SearchView_YearFrom').val();
                var label_7 = "BENEFIT Jul " + $('#SearchView_YearFrom').val();
                var label_8 = "BENEFIT Aug " + $('#SearchView_YearFrom').val();
                var label_9 = "BENEFIT Sep " + $('#SearchView_YearFrom').val();
                var label_10 = "BENEFIT Oct " + $('#SearchView_YearFrom').val();
                var label_11 = "BENEFIT Nov " + $('#SearchView_YearFrom').val();
                var label_12 = "BENEFIT Dec " + $('#SearchView_YearFrom').val();

                var label_13 = "WTC Jan " + $('#SearchView_YearFrom').val();
                var label_14 = "WTC Feb " + $('#SearchView_YearFrom').val();
                var label_15 = "WTC Mar " + $('#SearchView_YearFrom').val();
                var label_16 = "WTC Apr " + $('#SearchView_YearFrom').val();
                var label_17 = "WTC May " + $('#SearchView_YearFrom').val();
                var label_18 = "WTC Jun " + $('#SearchView_YearFrom').val();
                var label_19 = "WTC Jul " + $('#SearchView_YearFrom').val();
                var label_20 = "WTC Aug " + $('#SearchView_YearFrom').val();
                var label_21 = "WTC Sep " + $('#SearchView_YearFrom').val();
                var label_22 = "WTC Oct " + $('#SearchView_YearFrom').val();
                var label_23 = "WTC Nov " + $('#SearchView_YearFrom').val();
                var label_24 = "WTC Dec " + $('#SearchView_YearFrom').val();

                for (var i = 0; i < response.length; i++) {
                    labels_chart.push(response[i].FUNCTION);

                    chart_1.push(response[i].NO_OF_VEHICLE_BENEFIT_1);
                    chart_2.push(response[i].NO_OF_VEHICLE_BENEFIT_2);
                    chart_3.push(response[i].NO_OF_VEHICLE_BENEFIT_3);
                    chart_4.push(response[i].NO_OF_VEHICLE_BENEFIT_4);
                    chart_5.push(response[i].NO_OF_VEHICLE_BENEFIT_5);
                    chart_6.push(response[i].NO_OF_VEHICLE_BENEFIT_6);
                    chart_7.push(response[i].NO_OF_VEHICLE_BENEFIT_7);
                    chart_8.push(response[i].NO_OF_VEHICLE_BENEFIT_8);
                    chart_9.push(response[i].NO_OF_VEHICLE_BENEFIT_9);
                    chart_10.push(response[i].NO_OF_VEHICLE_BENEFIT_10);
                    chart_11.push(response[i].NO_OF_VEHICLE_BENEFIT_11);
                    chart_12.push(response[i].NO_OF_VEHICLE_BENEFIT_12);

                    chart_13.push(response[i].NO_OF_VEHICLE_WTC_1);
                    chart_14.push(response[i].NO_OF_VEHICLE_WTC_2);
                    chart_15.push(response[i].NO_OF_VEHICLE_WTC_3);
                    chart_16.push(response[i].NO_OF_VEHICLE_WTC_4);
                    chart_17.push(response[i].NO_OF_VEHICLE_WTC_5);
                    chart_18.push(response[i].NO_OF_VEHICLE_WTC_6);
                    chart_19.push(response[i].NO_OF_VEHICLE_WTC_7);
                    chart_20.push(response[i].NO_OF_VEHICLE_WTC_8);
                    chart_21.push(response[i].NO_OF_VEHICLE_WTC_9);
                    chart_22.push(response[i].NO_OF_VEHICLE_WTC_10);
                    chart_23.push(response[i].NO_OF_VEHICLE_WTC_11);
                    chart_24.push(response[i].NO_OF_VEHICLE_WTC_12);

                    label_1 = response[i].LABEL1;
                    label_2 = response[i].LABEL2;
                    label_3 = response[i].LABEL3;
                    label_4 = response[i].LABEL4;
                    label_5 = response[i].LABEL5;
                    label_6 = response[i].LABEL6;
                    label_7 = response[i].LABEL7;
                    label_8 = response[i].LABEL8;
                    label_9 = response[i].LABEL9;
                    label_10 = response[i].LABEL10;
                    label_11 = response[i].LABEL11;
                    label_12 = response[i].LABEL12;
                    label_13 = response[i].LABEL13;
                    label_14 = response[i].LABEL14;
                    label_15 = response[i].LABEL15;
                    label_16 = response[i].LABEL16;
                    label_17 = response[i].LABEL17;
                    label_18 = response[i].LABEL18;
                    label_19 = response[i].LABEL19;
                    label_20 = response[i].LABEL20;
                    label_21 = response[i].LABEL21;
                    label_22 = response[i].LABEL22;
                    label_23 = response[i].LABEL23;
                    label_24 = response[i].LABEL24;
                }

                for (var i = $('#SearchView_MonthFrom').val() ; i <= $('#SearchView_MonthTo').val(); i++) {
                    if (i == 1) {
                        var data1 = {
                            label: label_1,
                            backgroundColor: getRandomColor(),
                            data: chart_1
                        };

                        var data2 = {
                            label: label_13,
                            backgroundColor: getRandomColor(),
                            data: chart_13
                        };

                        data_chart.push(data1);
                        data_chart.push(data2);
                    }

                    if (i == 2) {
                        var data1 = {
                            label: label_2,
                            backgroundColor: getRandomColor(),
                            data: chart_2
                        };

                        var data2 = {
                            label: label_14,
                            backgroundColor: getRandomColor(),
                            data: chart_14
                        };

                        data_chart.push(data1);
                        data_chart.push(data2);
                    }

                    if (i == 3) {
                        var data1 = {
                            label: label_3,
                            backgroundColor: getRandomColor(),
                            data: chart_3
                        };

                        var data2 = {
                            label: label_15,
                            backgroundColor: getRandomColor(),
                            data: chart_15
                        };

                        data_chart.push(data1);
                        data_chart.push(data2);
                    }

                    if (i == 4) {
                        var data1 = {
                            label: label_4,
                            backgroundColor: getRandomColor(),
                            data: chart_4
                        };

                        var data2 = {
                            label: label_16,
                            backgroundColor: getRandomColor(),
                            data: chart_16
                        };

                        data_chart.push(data1);
                        data_chart.push(data2);
                    }

                    if (i == 5) {
                        var data1 = {
                            label: label_5,
                            backgroundColor: getRandomColor(),
                            data: chart_5
                        };

                        var data2 = {
                            label: label_17,
                            backgroundColor: getRandomColor(),
                            data: chart_17
                        };

                        data_chart.push(data1);
                        data_chart.push(data2);
                    }

                    if (i == 6) {
                        var data1 = {
                            label: label_6,
                            backgroundColor: getRandomColor(),
                            data: chart_6
                        };

                        var data2 = {
                            label: label_18,
                            backgroundColor: getRandomColor(),
                            data: chart_18
                        };

                        data_chart.push(data1);
                        data_chart.push(data2);
                    }

                    if (i == 7) {
                        var data1 = {
                            label: label_7,
                            backgroundColor: getRandomColor(),
                            data: chart_7
                        };

                        var data2 = {
                            label: label_19,
                            backgroundColor: getRandomColor(),
                            data: chart_19
                        };

                        data_chart.push(data1);
                        data_chart.push(data2);
                    }

                    if (i == 8) {
                        var data1 = {
                            label: label_8,
                            backgroundColor: getRandomColor(),
                            data: chart_8
                        };

                        var data2 = {
                            label: label_20,
                            backgroundColor: getRandomColor(),
                            data: chart_20
                        };

                        data_chart.push(data1);
                        data_chart.push(data2);
                    }

                    if (i == 9) {
                        var data1 = {
                            label: label_9,
                            backgroundColor: getRandomColor(),
                            data: chart_9
                        };

                        var data2 = {
                            label: label_21,
                            backgroundColor: getRandomColor(),
                            data: chart_21
                        };

                        data_chart.push(data1);
                        data_chart.push(data2);
                    }

                    if (i == 10) {
                        var data1 = {
                            label: label_10,
                            backgroundColor: getRandomColor(),
                            data: chart_10
                        };

                        var data2 = {
                            label: label_22,
                            backgroundColor: getRandomColor(),
                            data: chart_22
                        };

                        data_chart.push(data1);
                        data_chart.push(data2);
                    }

                    if (i == 11) {
                        var data1 = {
                            label: label_11,
                            backgroundColor: getRandomColor(),
                            data: chart_11
                        };

                        var data2 = {
                            label: label_23,
                            backgroundColor: getRandomColor(),
                            data: chart_23
                        };

                        data_chart.push(data1);
                        data_chart.push(data2);
                    }

                    if (i == 12) {
                        var data1 = {
                            label: label_12,
                            backgroundColor: getRandomColor(),
                            data: chart_12
                        };

                        var data2 = {
                            label: label_24,
                            backgroundColor: getRandomColor(),
                            data: chart_24
                        };

                        data_chart.push(data1);
                        data_chart.push(data2);
                    }
                }

                if ($('#mylineChart').length) {
                    $('#mylineChart').remove();
                    $('#chartDiv').append('<canvas id="mylineChart"><canvas>');
                    var ctx = document.getElementById("mylineChart");
                    var mylineChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels_chart,
                            datasets: data_chart
                        },
                        //HERE COMES THE AXIS LABEL
                        options: {
                            scales: {
                                yAxes: [{
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Unit'
                                    }
                                }],
                                xAxes: [{
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Functions'
                                    }
                                }]
                            }
                        }
                    });
                }
            },
            error: function (jqhxr) {
                console.log("ERROR");
                console.log(jqhxr.responseText);
                $('#LoadingModal').hide();
            }
        });

        $('#LoadingModal').hide();
    }

    $(document).on('click', '#btn-filter', function () {
        init_charts();
    });
</script>