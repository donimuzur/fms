@using FMS.Core;
@model FMS.Website.Models.EmployeeModel
<!-- Main content -->
<div class="opt-content clearfloat">
    <h5 class="title-page">Master Data Employee</h5>
    @if (Model.CurrentPageAccess.UploadAccess == true)
    {
        <a href="@Url.Action("Upload", "MstEmployee")" class="btn btn-primary line" title="Upload & View" ng-click="uploadCom()">
            <i class="fa fa-download"></i> Import
        </a>
    }
    <a href="#!" class="btn btn-primary line" id="btnExport" title="Export To Excel" onclick="ExportXls()">
        <i class="fa fa-upload"></i> Export
    </a>
</div>
<section class="content">
    @using (Html.BeginForm("ExportMasterEmployee", "MstEmployee", FormMethod.Post, new { @id = "ExportToXls" }))
    {
    }

    <div class="form-excise" role="form">
        <div class="row">
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Status</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SearchView.Status, Model.SearchView.StatusList, "All", new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Employee Id</label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.SearchView.EmployeeId, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Formal Name</label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.SearchView.FormalName, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Position Title</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SearchView.PositionTitle, Model.SearchView.PositionTitleList, "All", new { @class = "form-control selectpicker" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Division</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SearchView.Division, Model.SearchView.DivisionList, "All", new { @class = "form-control selectpicker" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Directorate</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SearchView.Directorate, Model.SearchView.DirectorateList, "All", new { @class = "form-control selectpicker" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Address</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SearchView.Address, Model.SearchView.AddressList, "All", new { @class = "form-control selectpicker" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">City</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SearchView.City, Model.SearchView.CityList, "All", new { @class = "form-control selectpicker" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Base Town</label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.SearchView.BaseTown, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Company</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SearchView.Company, Model.SearchView.CompanyList, "All", new { @class = "form-control selectpicker" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Cost Center</label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.SearchView.CostCenter, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Group Level</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SearchView.GroupLevel, Model.SearchView.GroupLevelList, "All", new { @class = "form-control selectpicker" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Email Address</label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.SearchView.EmailAddress, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <label class="col-md-4">Flex Point</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SearchView.FlexPoint, Model.SearchView.FlexPointList, "All", new { @class = "form-control selectpicker" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="col-md-6">
                    <input id="btn-filter" type="submit" class="btn btn-blue" value="Filter" onclick="OnFilter();" />
                </div>
            </div>
        </div>
    </div>
    @*<div class="wpanel">*@
    <div id="contenttable" class="table-container">
        <input type="hidden" id="returnTotalData" value="@Model.TotalData" />
        <input type="hidden" id="returnTotalPerPage" value="@Model.TotalDataPerPage" />
        <input type="hidden" id="returnCurrentPage" value="@Model.CurrentPage" />
        <table id="tbEmployee" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Action</th>
                    <th>Employee ID</th>
                    <th>Formal Name</th>
                    <th>Position Title</th>
                    <th>Division</th>
                    <th>Directorate</th>
                    <th>Address</th>
                    <th>City</th>
                    <th>Basetown</th>
                    <th>Company</th>
                    <th>Cost Center</th>
                    <th>Group Level</th>
                    <th>Email Address</th>
                    <th>Flex Point</th>
                    <th>Status</th>
                </tr>
            </thead>
            @*<thead class="filters">
                <tr>
                    <th>
                        @if (Model.CurrentPageAccess.WriteAccess == true)
                        {
                            <a href="@Url.Action("Create", "MstEmployee")" class="btn btn-primary line"><i class="fa fa-plus" id="myModalLabel"></i> New</a>
                        }
                    </th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                    <th><input style="border-radius: 5px; text-align: center;" type="text" class="form-control" placeholder="search"></th>
                </tr>
            </thead>*@
            <tbody>
                @foreach (var data in Model.Details)
                {
                    <tr>
                        <td style="text-align: center;">
                            @if (Model.CurrentPageAccess.WriteAccess == true)
                            {
                                <a href="@Url.Action("Edit", "MstEmployee", new { EmployeeId = data.EMPLOYEE_ID })" data-toggle="tooltip" data-placement="top" title="Edit" class="action"><img src="~/Content/images/pin.png" alt="" /></a>
                            }
                            @if (Model.CurrentPageAccess.ReadAccess == true)
                            {
                                <a href="@Url.Action("Detail", "MstEmployee", new { EmployeeId = data.EMPLOYEE_ID })" data-toggle="tooltip" data-placement="top" title="Edit" class="action"><img src="~/Content/images/search.png" alt="" /></a>
                            }
                        </td>
                        <td>@Html.Raw(data.EMPLOYEE_ID)</td>
                        <td>@Html.Raw(data.FORMAL_NAME)</td>
                        <td>@Html.Raw(data.POSITION_TITLE)</td>
                        <td>@Html.Raw(data.DIVISON)</td>
                        <td>@Html.Raw(data.DIRECTORATE)</td>
                        <td>@Html.Raw(data.ADDRESS)</td>
                        <td>@Html.Raw(data.CITY)</td>
                        <td>@Html.Raw(data.BASETOWN)</td>
                        <td>@Html.Raw(data.COMPANY)</td>
                        <td>@Html.Raw(data.COST_CENTER)</td>
                        <td>@Html.Raw(data.GROUP_LEVEL)</td>
                        <td>@Html.Raw(data.EMAIL_ADDRESS)</td>
                        <td>@Html.Raw(data.FLEX_POINT)</td>
                        <td>@Html.Raw(data.IS_ACTIVE)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</section>

<script type="text/javascript">
    function ExportXls() {
        $('#ExportToXls').submit();
    }

    //$(function () {
    //    // DataTable
    //    var table = $('#tbEmployee').DataTable({
    //        "dom": 'lf<"table-overflow"t>pi',
    //        orderCellsTop: true
    //    });

    //    // Apply the search
    //    table.columns().eq(0).each(function (colIdx) {
    //        $('input', $('.filters th')[colIdx]).on('keyup change', function () {
    //            table
    //                .column(colIdx)
    //                .search(this.value)
    //                .draw();
    //        });
    //    });
    //});
    var actionHtml = '';

    $(document).ready(function () {
        $(".selectpicker.form-control").attr('data-live-search', true);
        setupDataTables();
        // DataTable
        //var table = $('#tbFleet').DataTable({
        //    "dom": 'lf<"table-overflow"t>pi',
        //    orderCellsTop: true//,
        //        //drawCallback: function(){
        //        //    $(".paginate_button", this.api().table().container()).on('click', function () {
        //        //        var dataPerPage = table.page.len();
        //        //        var page = table.page();

        //        //        alert(dataPerPage+ "button");
        //        //        alert(page + "button");
        //        //    });
        //        //}
        //});

        //$('#tbFleet').on('length.dt', function (e, settings, len) {
        //    var dataPerPage = table.page.len();
        //    var page = table.page();

        //    $.ajax({
        //        type: "POST",
        //        url: "MstFleet",
        //        data: { "pageNumber": page + 1, "dataPerPage": dataPerPage }
        //    });
        //});

        // Apply the search
        //table.columns().eq(0).each(function (colIdx) {
        //    $('input', $('.filters th')[colIdx]).on('keyup change', function () {
        //        table
        //            .column(colIdx)
        //            .search(this.value)
        //            .draw();
        //    });
        //});
        
    });
    function ReloadDataTables() {
        $('.toggle-row').click(function() {

            var filter = $(".filters");
            filter.slideToggle(100).promise().done(function() {

            });
        });
        setupDataTables();
        $('.loading').hide();
    }

    function setupColumns() {
        var columns = [
            { "data": null, "orderable" : false },
            { "data": "EMPLOYEE_ID", "orderable": true },
            { "data": "FORMAL_NAME", "orderable": true },
            { "data": "POSITION_TITLE", "orderable": true },
            { "data": "DIVISON", "orderable": true },
            { "data": "DIRECTORATE", "orderable": true },
            { "data": "ADDRESS", "orderable": true },
            { "data": "CITY", "orderable": true },
            { "data": "BASETOWN", "orderable": true },
            { "data": "COMPANY", "orderable": true },
            { "data": "COST_CENTER", "orderable": false },
            { "data": "GROUP_LEVEL", "orderable": false },
            { "data": "EMAIL_ADDRESS", "orderable": true },
            { "data": "FLEX_POINT", "orderable": true },
            { "data": "IS_ACTIVE", "orderable": false }
        ];
        return columns;
    }


    function setupDataTables(blFirst) {

        // DataTable

        var table = null;
        if ($.fn.dataTable.isDataTable('#tbEmployee')) {
            table = $('#tbEmployee').DataTable();
            table.destroy();
        }

        var WriteAccess = @Model.WriteAccess;
        var ReadAccess = @Model.ReadAccess;

        table = $('#tbEmployee').DataTable(
            {
                "sDom": "Rlfrtip",
                "sPaginationType": "full_numbers",
                "language": {
                    "zeroRecords": "No records found",
                    "infoFiltered": "(filtered from _MAX_ total records)"
                },

                "rowCallback": function(row, data, index) {
                    if (WriteAccess = true) {
                        actionHtml = "<a href='MstEmployee/Edit?EmployeeId="+data.EMPLOYEE_ID+"' data-toggle='tooltip' data-placement='top' title='Edit class='action'>" +
                                        "<img src='/Content/images/pin.png' alt='' />" +
                                        "</a>";
                    }
                    if (ReadAccess = true) {
                        actionHtml = actionHtml + "<a href='MstEmployee/Detail?EmployeeId="+data.EMPLOYEE_ID+" ' data-toggle='tooltip' data-placement='top' title='Detail' class='action'>" +
                            "<img src='/Content/images/search.png' alt='' />" +
                            "</a>";
                    }


                    var actionRow = $(row).find("td")[0];
                    $(actionRow).addClass('action');
                    $(actionRow).html(actionHtml);
                },
                "serverSide": true,
                //"processing": true,
                "paging": true,
                "deferRender": true,
                "columns": setupColumns(),

                "ajax": {
                    "url": "@Url.Action("SearchEmployeeAjax", "MstEmployee")",
                "type": "POST",
                "data": function(d) {
                    return $.extend({}, d, {
                        "ExtraFilter": {
                            "SearchView": {
                                "Status": $("#SearchView_Status").val(),
                                "EmployeeId": $("#SearchView_EmployeeId").val(),
                                "FormalName": $("#SearchView_FormalName").val(),
                                "PositionTitle": $("#SearchView_PositionTitle").val(),
                                "Division": $("#SearchView_Division").val(),
                                "Directorate": $("#SearchView_Directorate").val(),
                                "Address": $("#SearchView_Address").val(),
                                "City": $("#SearchView_City").val(),
                                "BaseTown": $("#SearchView_BaseTown").val(),
                                "Company": $("#SearchView_Company").val(),
                                "CostCenter": $("#SearchView_CostCenter").val(),
                                "GroupLevel": $("#SearchView_GroupLevel").val(),
                                "EmailAddress": $("#SearchView_EmailAddress").val(),
                                "FlexPoint": $("#SearchView_FlexPoint").val()

                            }
                        }
                    });
                }
            }
        });
    table.on('preXhr', function(e, settings, data) {
        $(".loading").show();
    });

    table.on('xhr', function(e, settings, data) {
        $(".loading").hide();
    });
    }

    function ReloadDataTables1() {
        setupDataTables(false);
        setpaginglink();
    }

    function OnFilter() {
        var table = $('#tbEmployee').DataTable();

        table.ajax.reload();
    }

    function setpaginglink() {

    }
</script>
